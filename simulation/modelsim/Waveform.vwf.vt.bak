// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/22/2022 02:11:19"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          NuCore
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module NuCore_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [1:0] KEY;
// wires                                               
wire [31:0] Data_A;
wire [31:0] Data_B;
wire [0:6] HEX0;
wire [0:6] HEX1;
wire [0:6] HEX2;
wire [0:6] HEX3;
wire [0:6] HEX4;
wire [0:6] HEX5;
wire [0:0] LEDR;
wire [31:0] result;

// assign statements (if any)                          
NuCore i1 (
// port map - connection between master ports and signals/registers   
	.Data_A(Data_A),
	.Data_B(Data_B),
	.HEX0(HEX0),
	.HEX1(HEX1),
	.HEX2(HEX2),
	.HEX3(HEX3),
	.HEX4(HEX4),
	.HEX5(HEX5),
	.KEY(KEY),
	.LEDR(LEDR),
	.result(result)
);
initial 
begin 
#1000000 $stop;
end 
// KEY[ 1 ]
initial
begin
	KEY[1] = 1'b1;
end 
// KEY[ 0 ]
always
begin
	KEY[0] = 1'b0;
	KEY[0] = #10000 1'b1;
	#10000;
end 
endmodule

